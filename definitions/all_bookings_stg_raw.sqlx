config {
    type: "table",
    schema: "raw",
    name: "all_bookings_raw_dataform",
    tags:["bookings"]
}

SELECT 
        `b`.`id` AS `id`,
        `b`.`user_id` AS `user_id`,
        `b`.`user_data_id` AS `user_data_id`,
        `b`.`currency_id` AS `currency_id`,
        `b`.`status_id` AS `status_id`,
        `b`.`amount` AS `amount`,
        `b`.`discount` AS `discount`,
        `b`.`discounted_amount` AS `discounted_amount`,
        `b`.`gateway_response` AS `gateway_response`,
        `b`.`gateway_message` AS `gateway_message`,
        `b`.`refunded_amount` AS `refunded_amount`,
        `b`.`force_accepted_at` AS `force_accepted_at`,
        FORMAT_TIMESTAMP("%F %T", TIMESTAMP(b.created_at)) AS `created_at`,
        FORMAT_TIMESTAMP("%F %T", TIMESTAMP(b.updated_at)) AS `updated_at`,
        FORMAT_TIMESTAMP(
          "%F %T", 
          IF(b.cancelled_at = 'NaT', NULL, TIMESTAMP(b.cancelled_at))
        ) AS `cancelled_at`,
        `b`.`cancel_reason` AS `cancel_reason`,
        `b`.`payment_method_id` AS `payment_method_id`,
        `b`.`payment_due_date` AS `payment_due_date`,
        `b`.`used_payment_option` AS `used_payment_option`,
        `b`.`amount_without_vat` AS `amount_without_vat`,
        `b`.`vat` AS `vat`,
        `b`.`vat_amount` AS `vat_amount`,
        `b`.`payment_channel` AS `payment_channel`,
        `b`.`booking_purpose_id` AS `booking_purpose_id`,
        `b`.`user_agent` AS `user_agent`,
        `b`.`wallet_amount` AS `wallet_amount`,
        `b`.`final_amount` AS `final_amount`,
        `b`.`refund_target_id` AS `refund_target_id`,
        `b`.`cancelled_by_id` AS `cancelled_by_id`,
        `b`.`unique_id` AS `unique_id`,
        `b`.`comments` AS `comments`,
        `b`.`gateway_checkout_id` AS `gateway_checkout_id`,
        `b`.`gateway_payment_id` AS `gateway_payment_id`,
        `b`.`payment_gateway_id` AS `payment_gateway_id`,
        `b`.`gateway_token` AS `gateway_token`,
        `b`.`last_recurring_charge_try_date` AS `last_recurring_charge_try_date`,
        `b`.`gateway_card_info` AS `gateway_card_info`,
        `b`.`upgraded_to_id` AS `upgraded_to_id`,
        `b`.`upgraded_at` AS `upgraded_at`,
        `b`.`upgrade_date` AS `upgrade_date`,
        `b`.`card_id` AS `card_id`,
        `b`.`next_booking_discount` AS `next_booking_discount`,
        `b`.`is_trial` AS `is_trial`,
        `b`.`personal_wallet_amount` AS `personal_wallet_amount`,
        `b`.`company_wallet_amount` AS `company_wallet_amount`,
        `b`.`final_amount_vat` AS `final_amount_vat`,
        `b`.`payment_url` AS `payment_url`,
        `b`.`checkout_auth_code` AS `checkout_auth_code`,
        `bi`.`id` AS `booking_item_id`,
        `p`.`id` AS `product_id`,
        `bi`.`booked_for_date` AS `booked_for_date`,
        `bi`.`unit_price` AS `unit_price`,
        `bi`.`checked_in_at` AS `checked_in_at`,
        `bi`.`first_check_in_at` AS `first_check_in_at`,
        `bi`.`valid_until` AS `valid_until`,
        `bi`.`product_duration_id` AS `product_duration_id`,
        `bi`.`duration_type_id` AS `duration_type_id`,
        `bi`.`max_entries` AS `max_entries`,
        `pd`.`max_entries` AS `product_max_entries`,
        -- DATE_DIFF(ifnull(DATE(b.cancelled_at), date(bi.valid_until )),date(b.created_at), day) as final_max_entries,
        -- safe_divide (b.discounted_amount,DATE_DIFF(coalesce(SAFE_CAST(b.cancelled_at AS DATE), SAFE_CAST(bi.valid_until AS DATE)),SAFE_CAST(b.created_at as DATE), day)) as revenue_per_day,
        `bi`.`used_entries` AS `used_entries`,
        `bi`.`first_session_time` AS `first_session_time`,
        `bi`.`first_session_reminder_sent_at` AS `first_session_reminder_sent_at`,
        `bi`.`promo_code_id` AS `promo_code_id`,
        `bi`.`promo_code` AS `promo_code`,
        `bi`.`last_branch_id` AS `last_branch_id`,
        `bi`.`promo_code_type_id` AS `promo_code_type_id`,
        `bi`.`pausable` AS `pausable`,
        `bi`.`max_pause_days` AS `max_pause_days`,
        `bi`.`max_pause_times` AS `max_pause_times`,
        `bi`.`used_pause_days` AS `used_pause_days`,
        `bi`.`used_pause_times` AS `used_pause_times`,
        `bi`.`paused_at` AS `paused_at`,
        `bi`.`is_recurring` AS `is_recurring`,
        `bi`.`recurred_to_id` AS `recurred_to_id`,
        `bi`.`enforce_gender_id` AS `enforce_gender_id`,
        `bi`.`enforce_city_id` AS `enforce_city_id`,
        `bi`.`installment_enabled` AS `installment_enabled`,
        `bi`.`installment_phases` AS `installment_phases`,
        `bi`.`suspended_at` AS `suspended_at`,
        `bi`.`deprecated_at` AS `deprecated_at`,
        `p`.`ar_name` AS `p_ar_name`,
        `p`.`en_name` AS `p_en_name`,
        `p`.`ar_desc` AS `p_ar_desc`,
        `p`.`en_desc` AS `p_en_desc`,
        `p`.`original_price` AS `p_original_price`,
        `p`.`old_price` AS `p_old_price`,
        `p`.`reduced_price` AS `p_reduced_price`,
        `p`.`min_price` AS `p_min_price`,
        `p`.`rating` AS `p_rating`,
        `p`.`rating_count` AS `p_rating_count`,
        `p`.`product_type_id` AS `product_type_id`,
        `p`.`app_key` AS `p_app_key`,
        `p`.`app_sub_key` AS `p_app_sub_key`,
        `p`.`group_level` AS `p_group_level`
    FROM
        (((`staging.bookings` `b`
       left JOIN `staging.booking_items` `bi` ON ((`bi`.`booking_id` = `b`.`id`)))
       left JOIN `staging.product_durations` `pd` ON ((`bi`.`product_duration_id` = `pd`.`id`)))
       left JOIN `staging.products` `p` ON ((`pd`.`product_id` = `p`.`id`)))
    WHERE
        ((`b`.`booking_purpose_id` = 1)
            OR (`b`.`booking_purpose_id` IS NULL))
